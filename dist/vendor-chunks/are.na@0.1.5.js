/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/are.na@0.1.5";
exports.ids = ["vendor-chunks/are.na@0.1.5"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/are.na@0.1.5/node_modules/are.na/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/.pnpm/are.na@0.1.5/node_modules/are.na/index.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const axios = __webpack_require__(/*! axios */ \"(ssr)/./node_modules/.pnpm/axios@0.18.1/node_modules/axios/index.js\");\n\n// Helper to deal with pulling an inner object out of returned data\n// and then assigning other data as \"attrs\"\nconst pullObject = (key) => (object) => {\n  let newObj = object[key];\n  delete object[key];\n  Object.defineProperty(newObj, \"attrs\", {\n    value: object,\n  });\n  return newObj;\n};\n\n// Helper to accept an array or multiple arguments\n// and convert to array\nconst arrayOrList = (list) => {\n  if (typeof list[0] === \"object\" || typeof list[0] === \"array\") {\n    return list[0];\n  }\n  return list;\n};\n\nclass Arena {\n  constructor(opts) {\n    opts = opts || {};\n    let headers = {\n      \"Content-Type\": \"application/json\",\n    };\n    if (opts.accessToken) {\n      headers[\"Authorization\"] = `Bearer ${opts.accessToken}`;\n    }\n    if (opts.authToken) {\n      headers[\"X-AUTH-TOKEN\"] = `${opts.authToken}`;\n    }\n    this.axios = axios.create({\n      baseURL: opts.baseURL || \"https://api.are.na/v2/\",\n      headers,\n    });\n    this.requestHandler =\n      opts.requestHandler ||\n      ((method, url, data) => {\n        return method === \"get\"\n          ? this.axios\n              .request({ method, url, params: data })\n              .then(({ data }) => data)\n          : this.axios.request({ method, url, data }).then(({ data }) => data);\n      });\n  }\n\n  _req(method, url, ...data) {\n    return this.requestHandler(\n      method.toLowerCase(),\n      url,\n      Object.assign({}, ...data)\n    );\n  }\n\n  group(slug) {\n    slug = slug || \"\";\n    return {\n      get: (opts) => this._req(\"GET\", \"groups/\" + slug, opts),\n\n      channels: (opts) =>\n        this._req(\"GET\", \"groups/\" + slug + \"/channels\", opts).then(\n          pullObject(\"channels\")\n        ),\n    };\n  }\n\n  channel(slug, data) {\n    slug = slug || \"\";\n    return {\n      get: (opts) => this._req(\"GET\", \"channels/\" + slug, data, opts),\n\n      thumb: (opts) =>\n        this._req(\"GET\", \"channels/\" + slug + \"/thumb\", data, opts),\n\n      connections: (opts) =>\n        this._req(\"GET\", \"channels/\" + slug + \"/connections\", data, opts).then(\n          pullObject(\"channels\")\n        ),\n\n      channels: (opts) =>\n        this._req(\"GET\", \"channels/\" + slug + \"/channels\", data, opts).then(\n          pullObject(\"channels\")\n        ),\n\n      contents: (opts) =>\n        this._req(\"GET\", \"channels/\" + slug + \"/contents\", data, opts).then(\n          pullObject(\"contents\")\n        ),\n\n      collaborators: (opts) =>\n        this._req(\n          \"GET\",\n          \"channels/\" + slug + \"/collaborators\",\n          data,\n          opts\n        ).then(pullObject(\"users\")),\n\n      create: (title, status) =>\n        this._req(\"POST\", \"channels\", {\n          // Allow it to be called as .channel(title).create(status) or\n          // .channel().create(title, status)\n          title: slug || title,\n          status: slug ? title : status,\n        }),\n\n      delete: (deleteSlug) =>\n        this._req(\"DELETE\", \"channels/\" + (slug || deleteSlug)),\n\n      update: (opts) => this._req(\"PUT\", \"channels/\" + slug, opts),\n\n      addCollaborators: (...ids) =>\n        this._req(\"POST\", \"channels/\" + slug + \"/collaborators\", {\n          \"ids[]\": arrayOrList(ids),\n        }).then(pullObject(\"users\")),\n\n      deleteCollaborators: (...ids) =>\n        this._req(\"DELETE\", \"channels/\" + slug + \"/collaborators\", {\n          \"ids[]\": arrayOrList(ids),\n        }).then(pullObject(\"users\")),\n\n      createBlock: (opts) => {\n        if (opts.content.match(/^https?:\\/\\//)) {\n          opts.source = opts.content;\n        }\n        return this._req(\"POST\", \"channels/\" + slug + \"/blocks\", opts);\n      },\n\n      deleteBlock: (id) =>\n        this._req(\"DELETE\", \"channels/\" + slug + \"/blocks/\" + id),\n    };\n  }\n\n  block(id, data) {\n    return {\n      get: (opts) => this._req(\"GET\", \"blocks/\" + id, data, opts),\n\n      channels: (opts) =>\n        this._req(\"GET\", \"blocks/\" + id + \"/channels\", data, opts).then(\n          pullObject(\"channels\")\n        ),\n\n      create: (channel, opts) => this.channel(channel).createBlock(opts),\n\n      update: (opts) => this._req(\"PUT\", \"blocks/\" + id, data, opts),\n    };\n  }\n\n  user(id, data) {\n    return {\n      get: (opts) => this._req(\"GET\", \"users/\" + id, data, opts),\n\n      channels: (opts) =>\n        this._req(\"GET\", \"users/\" + id + \"/channels\", data, opts).then(\n          pullObject(\"channels\")\n        ),\n\n      following: (opts) =>\n        this._req(\"GET\", \"users/\" + id + \"/following\", data, opts).then(\n          pullObject(\"following\")\n        ),\n\n      followers: (opts) =>\n        this._req(\"GET\", \"users/\" + id + \"/followers\", data, opts).then(\n          pullObject(\"users\")\n        ),\n    };\n  }\n\n  search(q, data) {\n    return {\n      all: (opts) => this._req(\"GET\", \"search\", { q }, data, opts),\n\n      users: (opts) =>\n        this._req(\"GET\", \"search/users\", { q }, data, opts).then(\n          pullObject(\"users\")\n        ),\n\n      channels: (opts) =>\n        this._req(\"GET\", \"search/channels\", { q }, data, opts).then(\n          pullObject(\"channels\")\n        ),\n\n      blocks: (opts) =>\n        this._req(\"GET\", \"search/blocks\", { q }, data, opts).then(\n          pullObject(\"blocks\")\n        ),\n    };\n  }\n}\n\nmodule.exports = Arena;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYXJlLm5hQDAuMS41L25vZGVfbW9kdWxlcy9hcmUubmEvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxtQkFBTyxDQUFDLGtGQUFPOztBQUU3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsaUJBQWlCO0FBQzVEO0FBQ0E7QUFDQSxtQ0FBbUMsZUFBZTtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDJCQUEyQjtBQUNwRCx1QkFBdUIsTUFBTTtBQUM3QixpQ0FBaUMsbUJBQW1CLFVBQVUsTUFBTTtBQUNwRSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0RBQWtELEdBQUc7O0FBRXJEO0FBQ0EsMkNBQTJDLEdBQUc7QUFDOUM7QUFDQTs7QUFFQTtBQUNBLDhDQUE4QyxHQUFHO0FBQ2pEO0FBQ0E7O0FBRUE7QUFDQSw0Q0FBNEMsR0FBRztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFwaGFlbHNhbGFqYS8uL25vZGVfbW9kdWxlcy8ucG5wbS9hcmUubmFAMC4xLjUvbm9kZV9tb2R1bGVzL2FyZS5uYS9pbmRleC5qcz80MDQ5Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGF4aW9zID0gcmVxdWlyZShcImF4aW9zXCIpO1xuXG4vLyBIZWxwZXIgdG8gZGVhbCB3aXRoIHB1bGxpbmcgYW4gaW5uZXIgb2JqZWN0IG91dCBvZiByZXR1cm5lZCBkYXRhXG4vLyBhbmQgdGhlbiBhc3NpZ25pbmcgb3RoZXIgZGF0YSBhcyBcImF0dHJzXCJcbmNvbnN0IHB1bGxPYmplY3QgPSAoa2V5KSA9PiAob2JqZWN0KSA9PiB7XG4gIGxldCBuZXdPYmogPSBvYmplY3Rba2V5XTtcbiAgZGVsZXRlIG9iamVjdFtrZXldO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBcImF0dHJzXCIsIHtcbiAgICB2YWx1ZTogb2JqZWN0LFxuICB9KTtcbiAgcmV0dXJuIG5ld09iajtcbn07XG5cbi8vIEhlbHBlciB0byBhY2NlcHQgYW4gYXJyYXkgb3IgbXVsdGlwbGUgYXJndW1lbnRzXG4vLyBhbmQgY29udmVydCB0byBhcnJheVxuY29uc3QgYXJyYXlPckxpc3QgPSAobGlzdCkgPT4ge1xuICBpZiAodHlwZW9mIGxpc3RbMF0gPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGxpc3RbMF0gPT09IFwiYXJyYXlcIikge1xuICAgIHJldHVybiBsaXN0WzBdO1xuICB9XG4gIHJldHVybiBsaXN0O1xufTtcblxuY2xhc3MgQXJlbmEge1xuICBjb25zdHJ1Y3RvcihvcHRzKSB7XG4gICAgb3B0cyA9IG9wdHMgfHwge307XG4gICAgbGV0IGhlYWRlcnMgPSB7XG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICB9O1xuICAgIGlmIChvcHRzLmFjY2Vzc1Rva2VuKSB7XG4gICAgICBoZWFkZXJzW1wiQXV0aG9yaXphdGlvblwiXSA9IGBCZWFyZXIgJHtvcHRzLmFjY2Vzc1Rva2VufWA7XG4gICAgfVxuICAgIGlmIChvcHRzLmF1dGhUb2tlbikge1xuICAgICAgaGVhZGVyc1tcIlgtQVVUSC1UT0tFTlwiXSA9IGAke29wdHMuYXV0aFRva2VufWA7XG4gICAgfVxuICAgIHRoaXMuYXhpb3MgPSBheGlvcy5jcmVhdGUoe1xuICAgICAgYmFzZVVSTDogb3B0cy5iYXNlVVJMIHx8IFwiaHR0cHM6Ly9hcGkuYXJlLm5hL3YyL1wiLFxuICAgICAgaGVhZGVycyxcbiAgICB9KTtcbiAgICB0aGlzLnJlcXVlc3RIYW5kbGVyID1cbiAgICAgIG9wdHMucmVxdWVzdEhhbmRsZXIgfHxcbiAgICAgICgobWV0aG9kLCB1cmwsIGRhdGEpID0+IHtcbiAgICAgICAgcmV0dXJuIG1ldGhvZCA9PT0gXCJnZXRcIlxuICAgICAgICAgID8gdGhpcy5heGlvc1xuICAgICAgICAgICAgICAucmVxdWVzdCh7IG1ldGhvZCwgdXJsLCBwYXJhbXM6IGRhdGEgfSlcbiAgICAgICAgICAgICAgLnRoZW4oKHsgZGF0YSB9KSA9PiBkYXRhKVxuICAgICAgICAgIDogdGhpcy5heGlvcy5yZXF1ZXN0KHsgbWV0aG9kLCB1cmwsIGRhdGEgfSkudGhlbigoeyBkYXRhIH0pID0+IGRhdGEpO1xuICAgICAgfSk7XG4gIH1cblxuICBfcmVxKG1ldGhvZCwgdXJsLCAuLi5kYXRhKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdEhhbmRsZXIoXG4gICAgICBtZXRob2QudG9Mb3dlckNhc2UoKSxcbiAgICAgIHVybCxcbiAgICAgIE9iamVjdC5hc3NpZ24oe30sIC4uLmRhdGEpXG4gICAgKTtcbiAgfVxuXG4gIGdyb3VwKHNsdWcpIHtcbiAgICBzbHVnID0gc2x1ZyB8fCBcIlwiO1xuICAgIHJldHVybiB7XG4gICAgICBnZXQ6IChvcHRzKSA9PiB0aGlzLl9yZXEoXCJHRVRcIiwgXCJncm91cHMvXCIgKyBzbHVnLCBvcHRzKSxcblxuICAgICAgY2hhbm5lbHM6IChvcHRzKSA9PlxuICAgICAgICB0aGlzLl9yZXEoXCJHRVRcIiwgXCJncm91cHMvXCIgKyBzbHVnICsgXCIvY2hhbm5lbHNcIiwgb3B0cykudGhlbihcbiAgICAgICAgICBwdWxsT2JqZWN0KFwiY2hhbm5lbHNcIilcbiAgICAgICAgKSxcbiAgICB9O1xuICB9XG5cbiAgY2hhbm5lbChzbHVnLCBkYXRhKSB7XG4gICAgc2x1ZyA9IHNsdWcgfHwgXCJcIjtcbiAgICByZXR1cm4ge1xuICAgICAgZ2V0OiAob3B0cykgPT4gdGhpcy5fcmVxKFwiR0VUXCIsIFwiY2hhbm5lbHMvXCIgKyBzbHVnLCBkYXRhLCBvcHRzKSxcblxuICAgICAgdGh1bWI6IChvcHRzKSA9PlxuICAgICAgICB0aGlzLl9yZXEoXCJHRVRcIiwgXCJjaGFubmVscy9cIiArIHNsdWcgKyBcIi90aHVtYlwiLCBkYXRhLCBvcHRzKSxcblxuICAgICAgY29ubmVjdGlvbnM6IChvcHRzKSA9PlxuICAgICAgICB0aGlzLl9yZXEoXCJHRVRcIiwgXCJjaGFubmVscy9cIiArIHNsdWcgKyBcIi9jb25uZWN0aW9uc1wiLCBkYXRhLCBvcHRzKS50aGVuKFxuICAgICAgICAgIHB1bGxPYmplY3QoXCJjaGFubmVsc1wiKVxuICAgICAgICApLFxuXG4gICAgICBjaGFubmVsczogKG9wdHMpID0+XG4gICAgICAgIHRoaXMuX3JlcShcIkdFVFwiLCBcImNoYW5uZWxzL1wiICsgc2x1ZyArIFwiL2NoYW5uZWxzXCIsIGRhdGEsIG9wdHMpLnRoZW4oXG4gICAgICAgICAgcHVsbE9iamVjdChcImNoYW5uZWxzXCIpXG4gICAgICAgICksXG5cbiAgICAgIGNvbnRlbnRzOiAob3B0cykgPT5cbiAgICAgICAgdGhpcy5fcmVxKFwiR0VUXCIsIFwiY2hhbm5lbHMvXCIgKyBzbHVnICsgXCIvY29udGVudHNcIiwgZGF0YSwgb3B0cykudGhlbihcbiAgICAgICAgICBwdWxsT2JqZWN0KFwiY29udGVudHNcIilcbiAgICAgICAgKSxcblxuICAgICAgY29sbGFib3JhdG9yczogKG9wdHMpID0+XG4gICAgICAgIHRoaXMuX3JlcShcbiAgICAgICAgICBcIkdFVFwiLFxuICAgICAgICAgIFwiY2hhbm5lbHMvXCIgKyBzbHVnICsgXCIvY29sbGFib3JhdG9yc1wiLFxuICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgb3B0c1xuICAgICAgICApLnRoZW4ocHVsbE9iamVjdChcInVzZXJzXCIpKSxcblxuICAgICAgY3JlYXRlOiAodGl0bGUsIHN0YXR1cykgPT5cbiAgICAgICAgdGhpcy5fcmVxKFwiUE9TVFwiLCBcImNoYW5uZWxzXCIsIHtcbiAgICAgICAgICAvLyBBbGxvdyBpdCB0byBiZSBjYWxsZWQgYXMgLmNoYW5uZWwodGl0bGUpLmNyZWF0ZShzdGF0dXMpIG9yXG4gICAgICAgICAgLy8gLmNoYW5uZWwoKS5jcmVhdGUodGl0bGUsIHN0YXR1cylcbiAgICAgICAgICB0aXRsZTogc2x1ZyB8fCB0aXRsZSxcbiAgICAgICAgICBzdGF0dXM6IHNsdWcgPyB0aXRsZSA6IHN0YXR1cyxcbiAgICAgICAgfSksXG5cbiAgICAgIGRlbGV0ZTogKGRlbGV0ZVNsdWcpID0+XG4gICAgICAgIHRoaXMuX3JlcShcIkRFTEVURVwiLCBcImNoYW5uZWxzL1wiICsgKHNsdWcgfHwgZGVsZXRlU2x1ZykpLFxuXG4gICAgICB1cGRhdGU6IChvcHRzKSA9PiB0aGlzLl9yZXEoXCJQVVRcIiwgXCJjaGFubmVscy9cIiArIHNsdWcsIG9wdHMpLFxuXG4gICAgICBhZGRDb2xsYWJvcmF0b3JzOiAoLi4uaWRzKSA9PlxuICAgICAgICB0aGlzLl9yZXEoXCJQT1NUXCIsIFwiY2hhbm5lbHMvXCIgKyBzbHVnICsgXCIvY29sbGFib3JhdG9yc1wiLCB7XG4gICAgICAgICAgXCJpZHNbXVwiOiBhcnJheU9yTGlzdChpZHMpLFxuICAgICAgICB9KS50aGVuKHB1bGxPYmplY3QoXCJ1c2Vyc1wiKSksXG5cbiAgICAgIGRlbGV0ZUNvbGxhYm9yYXRvcnM6ICguLi5pZHMpID0+XG4gICAgICAgIHRoaXMuX3JlcShcIkRFTEVURVwiLCBcImNoYW5uZWxzL1wiICsgc2x1ZyArIFwiL2NvbGxhYm9yYXRvcnNcIiwge1xuICAgICAgICAgIFwiaWRzW11cIjogYXJyYXlPckxpc3QoaWRzKSxcbiAgICAgICAgfSkudGhlbihwdWxsT2JqZWN0KFwidXNlcnNcIikpLFxuXG4gICAgICBjcmVhdGVCbG9jazogKG9wdHMpID0+IHtcbiAgICAgICAgaWYgKG9wdHMuY29udGVudC5tYXRjaCgvXmh0dHBzPzpcXC9cXC8vKSkge1xuICAgICAgICAgIG9wdHMuc291cmNlID0gb3B0cy5jb250ZW50O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9yZXEoXCJQT1NUXCIsIFwiY2hhbm5lbHMvXCIgKyBzbHVnICsgXCIvYmxvY2tzXCIsIG9wdHMpO1xuICAgICAgfSxcblxuICAgICAgZGVsZXRlQmxvY2s6IChpZCkgPT5cbiAgICAgICAgdGhpcy5fcmVxKFwiREVMRVRFXCIsIFwiY2hhbm5lbHMvXCIgKyBzbHVnICsgXCIvYmxvY2tzL1wiICsgaWQpLFxuICAgIH07XG4gIH1cblxuICBibG9jayhpZCwgZGF0YSkge1xuICAgIHJldHVybiB7XG4gICAgICBnZXQ6IChvcHRzKSA9PiB0aGlzLl9yZXEoXCJHRVRcIiwgXCJibG9ja3MvXCIgKyBpZCwgZGF0YSwgb3B0cyksXG5cbiAgICAgIGNoYW5uZWxzOiAob3B0cykgPT5cbiAgICAgICAgdGhpcy5fcmVxKFwiR0VUXCIsIFwiYmxvY2tzL1wiICsgaWQgKyBcIi9jaGFubmVsc1wiLCBkYXRhLCBvcHRzKS50aGVuKFxuICAgICAgICAgIHB1bGxPYmplY3QoXCJjaGFubmVsc1wiKVxuICAgICAgICApLFxuXG4gICAgICBjcmVhdGU6IChjaGFubmVsLCBvcHRzKSA9PiB0aGlzLmNoYW5uZWwoY2hhbm5lbCkuY3JlYXRlQmxvY2sob3B0cyksXG5cbiAgICAgIHVwZGF0ZTogKG9wdHMpID0+IHRoaXMuX3JlcShcIlBVVFwiLCBcImJsb2Nrcy9cIiArIGlkLCBkYXRhLCBvcHRzKSxcbiAgICB9O1xuICB9XG5cbiAgdXNlcihpZCwgZGF0YSkge1xuICAgIHJldHVybiB7XG4gICAgICBnZXQ6IChvcHRzKSA9PiB0aGlzLl9yZXEoXCJHRVRcIiwgXCJ1c2Vycy9cIiArIGlkLCBkYXRhLCBvcHRzKSxcblxuICAgICAgY2hhbm5lbHM6IChvcHRzKSA9PlxuICAgICAgICB0aGlzLl9yZXEoXCJHRVRcIiwgXCJ1c2Vycy9cIiArIGlkICsgXCIvY2hhbm5lbHNcIiwgZGF0YSwgb3B0cykudGhlbihcbiAgICAgICAgICBwdWxsT2JqZWN0KFwiY2hhbm5lbHNcIilcbiAgICAgICAgKSxcblxuICAgICAgZm9sbG93aW5nOiAob3B0cykgPT5cbiAgICAgICAgdGhpcy5fcmVxKFwiR0VUXCIsIFwidXNlcnMvXCIgKyBpZCArIFwiL2ZvbGxvd2luZ1wiLCBkYXRhLCBvcHRzKS50aGVuKFxuICAgICAgICAgIHB1bGxPYmplY3QoXCJmb2xsb3dpbmdcIilcbiAgICAgICAgKSxcblxuICAgICAgZm9sbG93ZXJzOiAob3B0cykgPT5cbiAgICAgICAgdGhpcy5fcmVxKFwiR0VUXCIsIFwidXNlcnMvXCIgKyBpZCArIFwiL2ZvbGxvd2Vyc1wiLCBkYXRhLCBvcHRzKS50aGVuKFxuICAgICAgICAgIHB1bGxPYmplY3QoXCJ1c2Vyc1wiKVxuICAgICAgICApLFxuICAgIH07XG4gIH1cblxuICBzZWFyY2gocSwgZGF0YSkge1xuICAgIHJldHVybiB7XG4gICAgICBhbGw6IChvcHRzKSA9PiB0aGlzLl9yZXEoXCJHRVRcIiwgXCJzZWFyY2hcIiwgeyBxIH0sIGRhdGEsIG9wdHMpLFxuXG4gICAgICB1c2VyczogKG9wdHMpID0+XG4gICAgICAgIHRoaXMuX3JlcShcIkdFVFwiLCBcInNlYXJjaC91c2Vyc1wiLCB7IHEgfSwgZGF0YSwgb3B0cykudGhlbihcbiAgICAgICAgICBwdWxsT2JqZWN0KFwidXNlcnNcIilcbiAgICAgICAgKSxcblxuICAgICAgY2hhbm5lbHM6IChvcHRzKSA9PlxuICAgICAgICB0aGlzLl9yZXEoXCJHRVRcIiwgXCJzZWFyY2gvY2hhbm5lbHNcIiwgeyBxIH0sIGRhdGEsIG9wdHMpLnRoZW4oXG4gICAgICAgICAgcHVsbE9iamVjdChcImNoYW5uZWxzXCIpXG4gICAgICAgICksXG5cbiAgICAgIGJsb2NrczogKG9wdHMpID0+XG4gICAgICAgIHRoaXMuX3JlcShcIkdFVFwiLCBcInNlYXJjaC9ibG9ja3NcIiwgeyBxIH0sIGRhdGEsIG9wdHMpLnRoZW4oXG4gICAgICAgICAgcHVsbE9iamVjdChcImJsb2Nrc1wiKVxuICAgICAgICApLFxuICAgIH07XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBBcmVuYTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/are.na@0.1.5/node_modules/are.na/index.js\n");

/***/ })

};
;