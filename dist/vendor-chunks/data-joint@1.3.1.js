"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/data-joint@1.3.1";
exports.ids = ["vendor-chunks/data-joint@1.3.1"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/data-joint@1.3.1/node_modules/data-joint/dist/data-joint.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/data-joint@1.3.1/node_modules/data-joint/dist/data-joint.mjs ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ viewDigest)\n/* harmony export */ });\n/* harmony import */ var index_array_by__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! index-array-by */ \"(ssr)/./node_modules/.pnpm/index-array-by@1.4.1/node_modules/index-array-by/dist/index-array-by.mjs\");\n\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nvar _excluded = [\"createObj\", \"updateObj\", \"exitObj\", \"objBindAttr\", \"dataBindAttr\"];\nfunction diffArrays(prev, next, idAccessor) {\n  var result = {\n    enter: [],\n    update: [],\n    exit: []\n  };\n  if (!idAccessor) {\n    // use object references for comparison\n    var prevSet = new Set(prev);\n    var nextSet = new Set(next);\n    new Set([].concat(_toConsumableArray(prevSet), _toConsumableArray(nextSet))).forEach(function (item) {\n      var type = !prevSet.has(item) ? 'enter' : !nextSet.has(item) ? 'exit' : 'update';\n      result[type].push(type === 'update' ? [item, item] : item);\n    });\n  } else {\n    // compare by id (duplicate keys are ignored)\n    var prevById = (0,index_array_by__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(prev, idAccessor, false);\n    var nextById = (0,index_array_by__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(next, idAccessor, false);\n    var byId = Object.assign({}, prevById, nextById);\n    Object.entries(byId).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        id = _ref2[0],\n        item = _ref2[1];\n      var type = !prevById.hasOwnProperty(id) ? 'enter' : !nextById.hasOwnProperty(id) ? 'exit' : 'update';\n      result[type].push(type === 'update' ? [prevById[id], nextById[id]] : item);\n    });\n  }\n  return result;\n}\nfunction dataBindDiff(data, existingObjs, _ref3) {\n  var _ref3$objBindAttr = _ref3.objBindAttr,\n    objBindAttr = _ref3$objBindAttr === void 0 ? '__obj' : _ref3$objBindAttr,\n    _ref3$dataBindAttr = _ref3.dataBindAttr,\n    dataBindAttr = _ref3$dataBindAttr === void 0 ? '__data' : _ref3$dataBindAttr,\n    idAccessor = _ref3.idAccessor,\n    _ref3$purge = _ref3.purge,\n    purge = _ref3$purge === void 0 ? false : _ref3$purge;\n  var isObjValid = function isObjValid(obj) {\n    return obj.hasOwnProperty(dataBindAttr);\n  };\n  var removeObjs = existingObjs.filter(function (obj) {\n    return !isObjValid(obj);\n  });\n  var prevD = existingObjs.filter(isObjValid).map(function (obj) {\n    return obj[dataBindAttr];\n  });\n  var nextD = data;\n  var diff = purge ? {\n    enter: nextD,\n    exit: prevD,\n    update: []\n  } // don't diff data in purge mode\n  : diffArrays(prevD, nextD, idAccessor);\n  diff.update = diff.update.map(function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 2),\n      prevD = _ref5[0],\n      nextD = _ref5[1];\n    if (prevD !== nextD) {\n      // transfer obj to new data point (if different)\n      nextD[objBindAttr] = prevD[objBindAttr];\n      nextD[objBindAttr][dataBindAttr] = nextD;\n    }\n    return nextD;\n  });\n  diff.exit = diff.exit.concat(removeObjs.map(function (obj) {\n    return _defineProperty({}, objBindAttr, obj);\n  }));\n  return diff;\n}\nfunction viewDigest(data, existingObjs,\n// list\nappendObj,\n// item => {...} function\nremoveObj, // item => {...} function\n_ref7) {\n  var _ref7$createObj = _ref7.createObj,\n    createObj = _ref7$createObj === void 0 ? function (d) {\n      return {};\n    } : _ref7$createObj,\n    _ref7$updateObj = _ref7.updateObj,\n    updateObj = _ref7$updateObj === void 0 ? function (obj, d) {} : _ref7$updateObj,\n    _ref7$exitObj = _ref7.exitObj,\n    exitObj = _ref7$exitObj === void 0 ? function (obj) {} : _ref7$exitObj,\n    _ref7$objBindAttr = _ref7.objBindAttr,\n    objBindAttr = _ref7$objBindAttr === void 0 ? '__obj' : _ref7$objBindAttr,\n    _ref7$dataBindAttr = _ref7.dataBindAttr,\n    dataBindAttr = _ref7$dataBindAttr === void 0 ? '__data' : _ref7$dataBindAttr,\n    dataDiffOptions = _objectWithoutProperties(_ref7, _excluded);\n  var _dataBindDiff = dataBindDiff(data, existingObjs, _objectSpread2({\n      objBindAttr: objBindAttr,\n      dataBindAttr: dataBindAttr\n    }, dataDiffOptions)),\n    enter = _dataBindDiff.enter,\n    update = _dataBindDiff.update,\n    exit = _dataBindDiff.exit;\n\n  // Remove exiting points\n  exit.forEach(function (d) {\n    var obj = d[objBindAttr];\n    delete d[objBindAttr]; // unbind obj\n\n    exitObj(obj);\n    removeObj(obj);\n  });\n  var newObjs = createObjs(enter);\n  var pointsData = [].concat(_toConsumableArray(enter), _toConsumableArray(update));\n  updateObjs(pointsData);\n\n  // Add new points\n  newObjs.forEach(appendObj);\n\n  //\n\n  function createObjs(data) {\n    var newObjs = [];\n    data.forEach(function (d) {\n      var obj = createObj(d);\n      if (obj) {\n        obj[dataBindAttr] = d;\n        d[objBindAttr] = obj;\n        newObjs.push(obj);\n      }\n    });\n    return newObjs;\n  }\n  function updateObjs(data) {\n    data.forEach(function (d) {\n      var obj = d[objBindAttr];\n      if (obj) {\n        obj[dataBindAttr] = d;\n        updateObj(obj, d);\n      }\n    });\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/data-joint@1.3.1/node_modules/data-joint/dist/data-joint.mjs\n");

/***/ })

};
;